#!/bin/bash

# Verifica se o script está sendo executado como root
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;31mEste script deve ser executado como root!\033[0m"
    exit 1
fi

clear

# Função para exibir barra de progresso
fun_bar () {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y > /dev/null 2>&1
        ${comando[1]} -y > /dev/null 2>&1
        touch $HOME/fim
    ) > /dev/null 2>&1 &
    tput civis
    echo -ne "\033[1;33m["
    while true; do
        for ((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m - \033[1;32mOK!\033[1;37m"
    tput cnorm
}

# Verifica se a licença é válida
[[ $(awk -F" " '{print $2}' /usr/lib/licence) != "@ALVES_S.A" ]] && exit 0

# Função para iniciar o BadVPN
fun_udp1 () {
    if [[ -e "/bin/badvpn-udpgw" ]]; then
        clear
        echo -e "\033[1;32mINICIANDO O BADVPN... \033[0m\n"
        fun_udpon () {
            screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 10
            if [[ $(grep -wc "udpvpn" /etc/autostart) == '0' ]]; then
                echo -e "ps x | grep 'udpvpn' | grep -v 'grep' || screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 10000 --max-connections-for-client 10 --client-socket-sndbuf 10000" >> /etc/autostart
            else
                sed -i '/udpvpn/d' /etc/autostart
                echo -e "ps x | grep 'udpvpn' | grep -v 'grep' || screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 10000 --max-connections-for-client 10 --client-socket-sndbuf 10000" >> /etc/autostart
            fi
            sleep 1
        }
        fun_bar 'fun_udpon'
        echo -e "\n  \033[1;32mBADVPN ATIVO!\033[0m"
        sleep 3
        menu
    else
        clear
        echo -e "\033[1;32mINSTALANDO O BADVPN!\033[0m\n"
        inst_udp () {
            cd $HOME
            wget https://raw.githubusercontent.com/InfiniteNet/IFNT-PLUS-MANAGER/master/Install/badvpn-udpgw -o /dev/null
            if [[ ! -e "$HOME/badvpn-udpgw" ]]; then
                echo -e "\033[1;31mErro ao baixar o BadVPN.\033[0m"
                exit 1
            fi
            mv -f $HOME/badvpn-udpgw /bin/badvpn-udpgw
            chmod 777 /bin/badvpn-udpgw
        }
        fun_bar 'inst_udp'
        echo -e "\n\033[1;32mINICIANDO O BADVPN... \033[0m\n"
        fun_udpon2 () {
            screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 10
            if [[ $(grep -wc "udpvpn" /etc/autostart) == '0' ]]; then
                echo -e "ps x | grep 'udpvpn' | grep -v 'grep' || screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 10000 --max-connections-for-client 10 --client-socket-sndbuf 10000" >> /etc/autostart
            else
                sed -i '/udpvpn/d' /etc/autostart
                echo -e "ps x | grep 'udpvpn' | grep -v 'grep' || screen -dmS udpvpn /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 10000 --max-connections-for-client 10 --client-socket-sndbuf 10000" >> /etc/autostart
            fi
            sleep 1
        }
        fun_bar 'fun_udpon2'
        echo -e "\n\033[1;32mBADVPN ATIVO!\033[0m"
        sleep 3
        menu
    fi
}

# Função para parar o BadVPN
fun_udp2 () {
    clear
    echo -e "\n\033[1;32mPARANDO O BADVPN...\033[0m\n"
    fun_stopbad () {
        sleep 1
        screen -r -S "udpvpn" -X quit
        screen -wipe 1>/dev/null 2>/dev/null
        if [[ $(grep -wc "udpvpn" /etc/autostart) != '0' ]]; then
            sed -i '/udpvpn/d' /etc/autostart
        fi
        sleep 1
    }
    fun_bar 'fun_stopbad'
    echo -e "\n  \033[1;31mBADVPN PARADO!\033[0m"
    sleep 3
    menu
}

# Verifica se o BadVPN já está rodando e escolhe iniciar ou parar
if [[ $(ps x | grep "udpvpn" | grep -v grep | wc -l) == '0' ]]; then
    fun_udp1
else
    fun_udp2
fi
