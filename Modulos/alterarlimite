#!/bin/bash

# Verifica se o script está sendo executado como root
if [[ "$(whoami)" != "root" ]]; then
    tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Este script deve ser executado como root!" ; echo "" ; tput sgr0
    exit 1
fi

# Define o caminho do banco de dados
database="/root/usuarios.db"

# Exibe o cabeçalho
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%20s%s\n' "   Alterar limite de conexões simultâneas   " ; tput sgr0

# Verifica se o banco de dados existe
if [ ! -f "$database" ]; then
    tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Arquivo $database não encontrado." ; echo "" ; tput sgr0
    exit 1
else
    # Lista os usuários e seus limites
    tput setaf 3 ; tput bold ; echo ""; echo "LISTA DE USUÁRIOS E SEUS LIMITES:" ; tput sgr0
    echo ""

    # Obtém a lista de usuários do sistema com UID >= 1000 (usuários normais)
    _userT=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody)
    i=0
    unset _userPass

    # Lista cada usuário e seu limite de conexões
    while read -r _user; do
        i=$((i + 1))
        _oP=$i
        [[ $i -lt 10 ]] && _oP="0$i"  # Adiciona zero para manter a formatação

        # Obtém o limite de conexões do usuário
        if grep -q "^$_user" "$database"; then
            limit=$(grep -w "$_user" "$database" | cut -d' ' -f2)
        else
            limit='1'  # Limite padrão
        fi

        # Exibe o usuário e o limite
        l_user=$(echo -e "\033[1;31m[\033[1;36m$_oP\033[1;31m] \033[1;37m- \033[1;32m$_user\033[0m")
        lim=$(echo -e "\033[1;33mLimite\033[1;37m: $limit")
        printf '%-65s%s\n' "$l_user" "$lim"
        _userPass+="\n${_oP}:${_user}"
    done <<< "${_userT}"

    echo ""

    # Número total de usuários
    num_user=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
    echo -ne "\033[1;32mDigite ou selecione um usuário \033[1;33m[\033[1;36m1\033[1;31m-\033[1;36m$num_user\033[1;33m]\033[1;37m: " 
    read -r option

    # Verifica se a opção é válida
    usuario=$(echo -e "${_userPass}" | grep -E "\b$option\b" | cut -d: -f2)
    if [[ -z "$option" || -z "$usuario" ]]; then
        tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Usuário vazio ou não existente." ; echo "" ; tput sgr0
        exit 1
    fi

    # Solicita o novo limite de conexões
    echo -ne "\n\033[1;32mNovo limite para o usuário \033[1;33m$usuario\033[1;37m: "
    read -r sshnum

    # Verifica se o limite de conexões é válido
    if [[ -z "$sshnum" || ! "$sshnum" =~ ^[0-9]+$ || "$sshnum" -lt 1 ]]; then
        tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "Você digitou um número inválido!" ; echo "" ; tput sgr0
        exit 1
    else
        # Atualiza o limite de conexões no banco de dados
        grep -v "^$usuario[[:space:]]" "$database" > /tmp/a
        mv /tmp/a "$database"
        echo "$usuario $sshnum" >> "$database"
        tput setaf 7 ; tput setab 4 ; tput bold ; echo "" ; echo "Limite aplicado para o usuário $usuario foi $sshnum." ; tput sgr0
        sleep 2
        exit 0
    fi
fi
