#!/bin/bash
clear

# Verifica se o script está sendo executado como root
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;31mEste script deve ser executado como root!\033[0m"
    exit 1
fi

IP=$(wget -qO- ipv4.icanhazip.com)
arq="/etc/Plus-torrent"
echo -e "\E[44;1;37m           FIREWALL BLOQUEIO TORRENT           \E[0m"
echo ""

if [[ -e "$arq" ]]; then
    # Função para remover o firewall
    fun_fireoff () {
        iptables -P INPUT ACCEPT
        iptables -P OUTPUT ACCEPT
        iptables -P FORWARD ACCEPT
        iptables -t mangle -F
        iptables -t mangle -X
        iptables -t nat -F
        iptables -t nat -X
        iptables -t filter -F
        iptables -t filter -X
        iptables -F
        iptables -X
        rm -f $arq
        sleep 3
    }

    fun_spn1 () {
        echo -ne "\033[1;31mREMOVENDO FIREWALL\033[1;32m.\033[1;33m.\033[1;31m. \033[1;32m"
        fun_fireoff > /dev/null 2>&1 &
        tput civis
        while [ -d /proc/$! ]; do
            for i in / - \\ \|; do
                sleep .1
                echo -ne "\e[1D$i"
            done
        done
        tput cnorm
        echo -e "\e[1DOk"
    }

    read -p "$(echo -e "\033[1;32mDESEJA REMOVER REGRAS FIREWALL? \033[1;33m[s/n]:\033[1;37m") " -e -i n resp
    if [[ "$resp" = 's' ]]; then
        echo ""    
        fun_spn1
        echo ""
        echo -e "\033[1;33mTORRENT LIBERADO !\033[0m"
        echo ""
        echo -e "\033[1;32mFIREWALL REMOVIDO COM SUCESSO !\033[0m"
        echo ""

        # Verifica se o OpenVPN está instalado e sugere reiniciar o sistema
        if [[ -e /etc/openvpn/openvpn-status.log ]]; then
            echo -e "\033[1;31m[\033[1;33m!\033[1;31m]\033[1;33m REINICIE O SISTEMA PARA CONCLUIR\033[0m"
            echo ""
            read -p "$(echo -e "\033[1;32mREINICIAR AGORA \033[1;31m? \033[1;33m[s/n]:\033[1;37m ")" -e -i s respost
            echo ""
            if [[ "$respost" = 's' ]]; then
                echo -ne "\033[1;31mReiniciando"
                for i in $(seq 1 1 5); do
                    echo -n "."
                    sleep 1
                done
                reboot
            fi
        fi
        sleep 2
    else
        sleep 1
    fi
else
    echo -e "\033[1;31m[\033[1;33m!\033[1;31m]\033[1;33m FUNÇÃO BETA, UTILIZE POR SUA CONTA E RISCO\033[0m"
    echo ""
    read -p "$(echo -ne "\033[1;32mDESEJA APLICAR REGRAS FIREWALL? \033[1;33m[s/n]:\033[1;37m") " -e -i n resp
    if [[ "$resp" = 's' ]]; then
        echo ""
        echo -ne "\033[1;33mPARA CONTINUAR, CONFIRME SEU IP: \033[1;37m"; read -e -i $IP IP
        if [[ -z "$IP" ]]; then
            echo ""
            echo -e "\033[1;31mIP inválido!\033[0m"
            sleep 1
            echo ""
            read -p "Digite seu IP: " IP
        fi
        echo ""
        sleep 1

        # Função para aplicar o firewall
        fun_fireon () {
            NIC=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)

            echo 'iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
            iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
            iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
            iptables -t filter -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT' > $arq

            echo 'iptables -A OUTPUT -p tcp --dport 53 -m state --state NEW -j ACCEPT
            iptables -A OUTPUT -p udp --dport 53 -m state --state NEW -j ACCEPT' >> $arq

            echo "iptables -t nat -A PREROUTING -i $NIC -p tcp --dport 6881:6889 -j DNAT --to-dest $IP
            iptables -A FORWARD -p tcp -i $NIC --dport 6881:6889 -d $IP -j REJECT
            iptables -A OUTPUT -p tcp --dport 6881:6889 -j DROP
            iptables -A OUTPUT -p udp --dport 6881:6889 -j DROP" >> $arq

            echo 'iptables -A FORWARD -m string --algo bm --string "BitTorrent" -j DROP
            iptables -A FORWARD -m string --algo bm --string "torrent" -j DROP
            iptables -A FORWARD -m string --string ".torrent" --algo bm -j DROP' >> $arq

            sleep 2
            chmod +x $arq
            $arq > /dev/null
        }

        fun_spn2 () {
            echo -ne "\033[1;32mAPLICANDO FIREWALL\033[1;32m.\033[1;33m.\033[1;31m. \033[1;32m"
            fun_fireon > /dev/null 2>&1 &
            tput civis
            while [ -d /proc/$! ]; do
                for i in / - \\ \|; do
                    sleep .1
                    echo -ne "\e[1D$i"
                done
            done
            tput cnorm
            echo -e "\e[1DOk"
        }

        fun_spn2
        echo ""
        echo -e "\033[1;33mBLOQUEIO\033[1;37m TORRENT \033[1;33mAPLICADO!\033[0m"
        echo ""
        echo -e "\033[1;32mFIREWALL APLICADO COM SUCESSO!\033[0m"
        sleep 3
    else
        sleep 1
    fi
fi
