#!/bin/bash
clear
echo -e "\E[44;1;37m               INFORMAÇÕES DO VPS                 \E[0m"
echo ""

# Verifica o sistema operacional
if [ -f /etc/lsb-release ]; then
    echo -e "\033[1;31m• \033[1;32mSISTEMA OPERACIONAL\033[1;31m •\033[0m"
    echo ""
    name=$(grep 'DISTRIB_DESCRIPTION' /etc/lsb-release | cut -d '=' -f2)
    codename=$(grep 'DISTRIB_CODENAME' /etc/lsb-release | cut -d '=' -f2)
    echo -e "\033[1;33mNome: \033[1;37m$name"
    echo -e "\033[1;33mCodename: \033[1;37m$codename"
    echo -e "\033[1;33mKernel: \033[1;37m$(uname -s)"
    echo -e "\033[1;33mKernel Release: \033[1;37m$(uname -r)"
    
    if [ -f /etc/os-release ]; then
        devlike=$(grep 'ID_LIKE' /etc/os-release | cut -d '=' -f2)
        echo -e "\033[1;33mDerivado de OS: \033[1;37m$devlike"
    fi
    echo ""
else
    system=$(cat /etc/issue.net)
    echo -e "\033[1;31m• \033[1;32mSISTEMA OPERACIONAL\033[1;31m •\033[0m"
    echo -e "\033[1;33mNome: \033[1;37m$system"
    echo ""
fi

# Verifica o processador
if [ -f /proc/cpuinfo ]; then
    uso_cpu=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}')
    echo -e "\033[1;31m• \033[1;32mPROCESSADOR\033[1;31m •\033[0m"
    echo ""
    modelo=$(grep -m 1 'model name' /proc/cpuinfo | cut -d ':' -f2 | xargs)
    cpucores=$(grep -c 'processor' /proc/cpuinfo)
    cache=$(grep -m 1 'cache size' /proc/cpuinfo | cut -d ':' -f2 | xargs)
    echo -e "\033[1;33mModelo:\033[1;37m $modelo"
    echo -e "\033[1;33mNúcleos:\033[1;37m $cpucores"
    echo -e "\033[1;33mMemória Cache:\033[1;37m $cache"
    echo -e "\033[1;33mArquitetura: \033[1;37m$(uname -m)"
    echo -e "\033[1;33mUtilização: \033[1;37m $uso_cpu"
    echo ""
else
    echo -e "\033[1;31mNão foi possível obter informações do processador.\033[0m"
fi

# Verifica a memória RAM
if free 1>/dev/null 2>/dev/null; then
    total_ram=$(free -h | grep -i mem | awk '{print $2}')
    usada_ram=$(free -h | grep -i mem | awk '{print $3}')
    livre_ram=$(free -h | grep -i mem | awk '{print $4}')
    uso_ram=$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2}')
    echo -e "\033[1;31m• \033[1;32mMEMÓRIA RAM\033[1;31m •\033[0m"
    echo ""
    echo -e "\033[1;33mTotal: \033[1;37m$total_ram"
    echo -e "\033[1;33mEm Uso: \033[1;37m$usada_ram"
    echo -e "\033[1;33mLivre: \033[1;37m$livre_ram"
    echo -e "\033[1;33mUtilização: \033[1;37m$uso_ram"
    echo ""
else
    echo -e "\033[1;31mNão foi possível obter informações da memória RAM.\033[0m"
fi

# Verifica os serviços em execução nas portas abertas
echo -e "\033[1;31m• \033[1;32mSERVIÇOS EM EXECUÇÃO\033[1;31m •\033[0m"
echo ""
PT=$(lsof -i -P -n | grep LISTEN | awk '{print $1, $9}' | uniq)
if [ -n "$PT" ]; then
    echo "$PT" | while read svc porta; do
        porta_clean=$(echo "$porta" | cut -d':' -f2)
        echo -e "\033[1;33mServiço: \033[1;37m$svc \033[1;33mPorta: \033[1;37m$porta_clean"
    done
else
    echo -e "\033[1;31mNenhum serviço encontrado.\033[0m"
fi
