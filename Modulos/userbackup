#!/bin/bash
clear
backbot=$1
IP=$(wget -qO- ipv4.icanhazip.com)

# Função para instalar e configurar o Apache
apchon () {
    if ! netstat -nltp | grep -q 'dropbear'; then
        apt-get install apache2 zip -y
        sed -i "s/Listen 80/Listen 81/g" /etc/apache2/ports.conf
        service apache2 restart
    fi

    [[ ! -d /var/www/html/backup ]] && mkdir -p /var/www/html/backup
    touch /var/www/html/backup/index.html
    chmod -R 755 /var/www
    /etc/init.d/apache2 restart
}

# Função para exibir barra de progresso
fun_temp () {
    helice () {
        apchon > /dev/null 2>&1 &
        tput civis
        while [ -d /proc/$! ]; do
            for i in / - \\ \|; do
                sleep .1
                echo -ne "\e[1D$i"
            done
        done
        tput cnorm
    }
    echo -ne "\033[1;33mAGUARDE\033[1;31m.\033[1;32m.\033[1;33m. \033[1;32m"
    helice
    echo -e "\e[1DOk"
}

# Função para gerar link do backup
geralink () {
    if [ -d /var/www/html/backup ]; then
        rm -rf /var/www/html/backup/backup.vps
        cp $HOME/backup.vps /var/www/html/backup/backup.vps
        sleep 2
    fi
}

# Função para exibir barra de progresso ao gerar o link
fun_temp2 () {
    helice () {
        geralink > /dev/null 2>&1 &
        tput civis
        while [ -d /proc/$! ]; do
            for i in / - \\ \|; do
                sleep .1
                echo -ne "\e[1D$i"
            done
        done
        tput cnorm
    }
    echo -ne "\033[1;33mGERANDO LINK\033[1;31m.\033[1;32m.\033[1;33m. \033[1;32m"
    helice
    echo -e "\e[1DOk"
}

# Menu principal
echo -e "\E[44;1;37m             Gerenciador De Backups              \E[0m"
echo ""
echo -e "\033[1;31m[\033[1;36m1\033[1;31m] \033[1;37m• \033[1;33mCRIAR BACKUP"
echo -e "\033[1;31m[\033[1;36m2\033[1;31m] \033[1;37m• \033[1;33mRESTAURAR BACKUP"
echo -e "\033[1;31m[\033[1;36m3\033[1;31m] \033[1;37m• \033[1;33mVOLTAR\033[1;37m"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER\033[1;31m ?\033[1;37m : "; read opcao

if [[ "$opcao" == '1' ]]; then
    if [ -f "/root/usuarios.db" ]; then
        rm -rf $HOME/backup.vps
        tar cvf /root/backup.vps /root/usuarios.db /etc/shadow /etc/passwd /etc/group /etc/gshadow /etc/SSHPlus/senha > /dev/null 2>&1
        echo -e "\033[1;32mBACKUP CRIADO COM SUCESSO!\033[0m"
        echo -ne "\033[1;32mGERAR LINK PARA DOWNLOAD \033[1;31m? \033[1;33m[s/n]:\033[1;37m "; read resp

        if [[ "$resp" == "s" ]]; then
            fun_temp
            fun_temp2
            if [ -e /var/www/html/backup/backup.vps ]; then
                echo -e "\033[1;32mLINK\033[1;37m: \033[1;36m$IP:81/backup/backup.vps\033[0m"
            else
                echo -e "\033[1;32mDisponível em\033[1;31m ~/$HOME/backup.vps\033[0m"
            fi
        else
            echo -e "\033[1;32mBackup disponível em\033[1;31m ~/$HOME/backup.vps\033[0m"
        fi
    else
        echo -e "\033[1;31mArquivo de usuários não encontrado!\033[0m"
    fi

elif [[ "$opcao" == '2' ]]; then
    if [ -f "/root/backup.vps" ]; then
        echo -e "\033[1;36mRestaurando backup...\033[0m"
        tar -xvf /root/backup.vps -C /
        echo -e "\033[1;36mUsuários e senhas restaurados com sucesso!\033[0m"
    else
        echo -e "\033[1;31mArquivo de backup não encontrado!\033[0m"
    fi

elif [[ "$opcao" == '3' ]]; then
    menu

else
    echo -e "\033[1;31mOpção inválida!\033[0m"
fi
